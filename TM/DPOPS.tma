# -----------------------------------------------------------------------------
# Partition 1: Main Line
# -----------------------------------------------------------------------------
State Init {
    > Telemetry Start
 +1 > MFC Bypass Flow Setpoint 0 nccm
    > MFC POPS Flow Setpoint 0 nccm
    { depending on (OFF_GROUND) Validate Startup; }
}

State Startup {
  { depending on (ON_GROUND) Validate Shutdown; }
  > POPS Power On
  Hold Until (POPS_Srvr == 1 || POPS_Srvr == 2) or 2:00
  else Validate POPS_Power_Cycle;
  Hold Until (POPS_Srvr == 1) or 1
  else > POPS Start
  Hold Until (POPS_Srvr == 2 && POPS_Stale == 0) or 10
  else Validate POPS_Comms;
  # Validate Flows_Start;
}

State POPS_Power_Cycle {
      { depending on (ON_GROUND) Validate Shutdown; }
      > POPS Power Off
  +30 Validate Startup;
}

State POPS_Comms {
      { depending on (ON_GROUND) Validate Shutdown; }
      # POPS did not respond to Start command
      # Try Shutdown?
      > POPS Shutdown
      Hold Until (POPS_Srvr == 4) or 10;
  +30 Validate POPS_Power_Cycle;
}

State Shutdown {
      # Shutdown flows
      { if (POPS_srvr == 0 || POPS_srvr == 3)
          Validate Shutdown1;
      }
      > POPS Shutdown
      Hold Until (POPS_srvr == 3) or 10;
  +30 Validate Shutdown1;
}

State Shutdown1 {
      > POPS Power Off
  +30 > Fail Light On
      > Quit
# +4  Validate BPump_Off;
#     Validate PPump_Off;
# +4  > MFC Bypass Flow Setpoint 0 nccm
# +4  > MFC POPS Flow Setpoint 0 nccm
}

State Idle {}

State Explore_Flows {
      Validate BPump_Off;
      Validate PPump_Off;
#+1    > MFC Bypass Flow Setpoint 3500 nccm
+2:00 > MFC Bypass Flow Setpoint 100 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 200 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 300 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 400 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 500 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 600 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 700 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 800 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 900 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1000 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1100 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1200 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1300 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1400 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1500 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC Bypass Flow Setpoint 1600 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
 #     > MFC POPS Flow Setpoint 1500 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 1400 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 1300 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 1200 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 1100 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 1000 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 900 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 800 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 700 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 600 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 500 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 400 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 300 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 200 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
 #    > MFC POPS Flow Setpoint 100 nccm
 #    Hold until valid (Pumps_Watch);
 #    Hold until valid (Pumps_Step);
   +1 Validate PPump_Off;
   +1 > MFC POPS Flow Setpoint 0 nccm
+1:58 Validate Idle;
}

State Flows_Abort {
      Validate BPump_Off;
      Validate PPump_Off;
  +10 > MFC Bypass Flow Setpoint 0 nccm
      > MFC POPS Flow Setpoint 0 nccm
      Validate Idle;
}

State Fixed_Flow {
      Validate BPump_Off;
      Validate PPump_Off;
  +4
      > MFC POPS Flow Setpoint 400 nccm
      > MFC Bypass Flow Setpoint 4600 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 450 nccm
      > MFC Bypass Flow Setpoint 4550 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 500 nccm
      > MFC Bypass Flow Setpoint 4500 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 550 nccm
      > MFC Bypass Flow Setpoint 4450 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 600 nccm
      > MFC Bypass Flow Setpoint 4400 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 650 nccm
      > MFC Bypass Flow Setpoint 4350 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 700 nccm
      > MFC Bypass Flow Setpoint 4300 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 750 nccm
      > MFC Bypass Flow Setpoint 4250 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 800 nccm
      > MFC Bypass Flow Setpoint 4200 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 850 nccm
      > MFC Bypass Flow Setpoint 4150 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 900 nccm
      > MFC Bypass Flow Setpoint 4100 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 950 nccm
      > MFC Bypass Flow Setpoint 4050 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 1000 nccm
      > MFC Bypass Flow Setpoint 4000 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 950 nccm
      > MFC Bypass Flow Setpoint 4050 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 900 nccm
      > MFC Bypass Flow Setpoint 4100 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 850 nccm
      > MFC Bypass Flow Setpoint 4150 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 800 nccm
      > MFC Bypass Flow Setpoint 4200 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 750 nccm
      > MFC Bypass Flow Setpoint 4250 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 700 nccm
      > MFC Bypass Flow Setpoint 4300 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 650 nccm
      > MFC Bypass Flow Setpoint 4350 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 600 nccm
      > MFC Bypass Flow Setpoint 4400 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 550 nccm
      > MFC Bypass Flow Setpoint 4450 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 500 nccm
      > MFC Bypass Flow Setpoint 4500 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 450 nccm
      > MFC Bypass Flow Setpoint 4550 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
      > MFC POPS Flow Setpoint 400 nccm
      > MFC Bypass Flow Setpoint 4600 nccm
      Hold until valid (Pumps_Watch);
      Hold until valid (Pumps_Step);
  +10 Validate BPump_Off;
      Validate BPump_Off;
  +10 > MFC Bypass Flow Setpoint 0 nccm
      > MFC POPS Flow Setpoint 0 nccm
  +60 Validate Fixed_Flow;
}

# -----------------------------------------------------------------------------
# Partition 2: Altitude
# -----------------------------------------------------------------------------

Partition

# This partition converts pressure (altitude) into states 
# (ON_GROUND, OFF_GROUND).
# The threshold pressures each have two values - one for 
# the flight up and the other for the flight down.
# This provides hysteresis and prevents bouncing.  
# Of course we need to ensure that P_ground_up < P_ground_dn,
# which is to say P_ground_up represent a higher altitude.
# We also want to ensure that P_ground_dn is high enough to
# allow the system to shutdown before landing while not being
# so high that it will be triggered during a mid-flight
# altitude scan. 

# MS5607_P is a float value in mbar
#
#
# REF: 650 torr ~867 mbar ~5000 ft
# Palmdale, CA is at elevation 2657'
# Salina, KS is at elevation 1227'

%{ /* Altitude definitions */
    double P_ground_up = 800.;
    double P_ground_dn = 850.;
    int using_swp = 0;
%}

State ON_GROUND {
  { using_swp = 0; }
  { if (using_swp || (MS5607_P > 0 && MS5607_P < P_ground_up))
      Validate OFF_GROUND;
  }
}

State OFF_GROUND {
  { if ((using_swp == SWS_LAND) || (!using_swp && MS5607_P > P_ground_dn)) {
      Validate ON_GROUND;
    }
  }
}

# -----------------------------------------------------------------------------
# Partition 3: Pumps
# -----------------------------------------------------------------------------

Partition

State Pumps_Idle {
  depending on (PPump_Watch) { Validate Pumps_Watch; }
  depending on (BPump_Watch) { Validate Pumps_Watch; }
}

State Pumps_Watch {
  depending on (PPump_Failed) { Validate Pumps_Failed; }
  depending on (BPump_Failed) { Validate Pumps_Failed; }
  depending on (BPump_Idle, PPump_Idle) { Validate Pumps_Idle; }
  +1:58 Validate Pumps_Step;
}

State Pumps_Step {
  +1 Validate Pumps_Watch;
}

State Pumps_Failed {
  Hold until (PMFC_MassFlow > 0.9 * PMFC_Set &&
              BMFC_MassFlow > 0.9 * BMFC_Set);
  +1 Validate Pumps_Watch;
}

# Pumps Partition
# This should be totally passive except for Shutdown.
# When the flow controller setpoints are set above 100 nccm,
# The pumps will turn on. This partition will then cycle
# between Pumps_Watch and Pumps_Step. If the flow through
# either MFC drops below 1/2 the setpoint for 5 seconds,
# it will advance to Pumps_Failed, shut off both pumps,
# wait 20 minutes, and then restart. The point is to
# guarantee 60 seconds of continuous flow at a particular
# setpoint before advancing in the mainline algorithm.
Partition

State PPump_Off {
  > Pump POPS Off
  { if (PMFC_Set < 10)
      Validate PPump_Idle; }
}

State PPump_Disable {
}

State PPump_Idle {
  Hold until (PMFC_Set >= 10);
  Validate PPump_On;
}

State PPump_On {
  { if (PMFC_Set < 10)
      Validate PPump_Off; }
  +1  > Pump POPS On
      Validate PPump_Watch;
}

State PPump_Watch {
  { if (PMFC_Set < 10)
      Validate PPump_Off; }
  +1 Hold Until (PMFC_MassFlow < 0.5 * PMFC_Set);
  +1 Hold Until (PMFC_MassFlow > 0.9 * PMFC_Set) or 5
     else Validate PPump_Failed;
     Validate PPump_Watch;
}

State PPump_Failed {
  { if (PMFC_Set < 10)
      Validate PPump_Off; }
          > Pump POPS Off
  +20:00  Validate PPump_On;
}

Partition

State BPump_Off {
  > Pump Bypass Off
  { if (BMFC_Set < 10)
      Validate BPump_Idle; }
}

State BPump_Disable {
}

State BPump_Idle {
  Hold until (BMFC_Set >= 10);
  Validate BPump_On;
}

State BPump_On {
  { if (BMFC_Set < 10)
      Validate BPump_Off; }
  +1  > Pump Bypass On
      Validate BPump_Watch;
}

State BPump_Watch {
  { if (BMFC_Set < 10)
      Validate BPump_Off; }
  +1 Hold Until (BMFC_MassFlow < 0.5 * BMFC_Set);
  +1 Hold Until (BMFC_MassFlow > 0.9 * BMFC_Set) or 5
     else Validate BPump_Failed;
     Validate BPump_Watch;
}

State BPump_Failed {
  { if (BMFC_Set < 10)
      Validate BPump_Off; }
          > Pump Bypass Off
  +20:00  Validate BPump_On;
}
