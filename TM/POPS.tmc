TM typedef signed short POPS_Drift { text "%6d"; }
TM typedef float POPS_float { text "%9.4f"; }
TM typedef unsigned char POPS_uchar { text "%3u"; }

TM 1 Hz POPS_Drift POPS_TDrift;
TM 1 Hz POPS_float POPS_TDDrift;
TM 1 Hz POPS_uchar POPS_Stale;
TM 1 Hz POPS_float POPS_Part_Num;
TM 1 Hz POPS_float POPS_PartCon_num_cc;
TM 1 Hz POPS_float POPS_Baseline;
TM 1 Hz POPS_float POPS_STD;
TM 1 Hz POPS_float POPS_P_mbar;
TM 1 Hz POPS_float POPS_Flow;
TM 1 Hz POPS_float POPS_LDTemp;
TM 1 Hz POPS_float POPS_LD_Mon;
TM 1 Hz POPS_float POPS_Temp;
TM 1 Hz POPS_float POPS_Bin01;
TM 1 Hz POPS_float POPS_Bin02;
TM 1 Hz POPS_float POPS_Bin03;
TM 1 Hz POPS_float POPS_Bin04;
TM 1 Hz POPS_float POPS_Bin05;
TM 1 Hz POPS_float POPS_Bin06;
TM 1 Hz POPS_float POPS_Bin07;
TM 1 Hz POPS_float POPS_Bin08;
TM 1 Hz POPS_float POPS_Bin09;
TM 1 Hz POPS_float POPS_Bin10;
TM 1 Hz POPS_float POPS_Bin11;
TM 1 Hz POPS_float POPS_Bin12;
TM 1 Hz POPS_float POPS_Bin13;
TM 1 Hz POPS_float POPS_Bin14;
TM 1 Hz POPS_float POPS_Bin15;
TM 1 Hz POPS_float POPS_Bin16;
TM "Receive" POPS 0;

Group POPS (POPS_TDrift, POPS_TDDrift, POPS_Part_Num, POPS_PartCon_num_cc, POPS_Baseline, POPS_STD, POPS_P_mbar, POPS_Flow, POPS_LDTemp, POPS_LD_Mon, POPS_Temp, POPS_Bin01, POPS_Bin02, POPS_Bin03, POPS_Bin04, POPS_Bin05, POPS_Bin06, POPS_Bin07, POPS_Bin08, POPS_Bin09, POPS_Bin10, POPS_Bin11, POPS_Bin12, POPS_Bin13, POPS_Bin14, POPS_Bin15, POPS_Bin16, POPS_Stale) {
  POPS_TDrift = calc_drift(POPS.Time);
  POPS_TDDrift = dtime() - POPS.Time;
  POPS_Part_Num = POPS.Part_Num;
  POPS_PartCon_num_cc = POPS.PartCon_num_cc;
  POPS_Baseline = POPS.Baseline;
  POPS_STD = POPS.STD;
  POPS_P_mbar = POPS.P_mbar;
  POPS_Flow = POPS.Flow;
  POPS_LDTemp = POPS.LDTemp;
  POPS_LD_Mon = POPS.LD_Mon;
  POPS_Temp = POPS.Temp;
  POPS_Bin01 = POPS.Bin01;
  POPS_Bin02 = POPS.Bin02;
  POPS_Bin03 = POPS.Bin03;
  POPS_Bin04 = POPS.Bin04;
  POPS_Bin05 = POPS.Bin05;
  POPS_Bin06 = POPS.Bin06;
  POPS_Bin07 = POPS.Bin07;
  POPS_Bin08 = POPS.Bin08;
  POPS_Bin09 = POPS.Bin09;
  POPS_Bin10 = POPS.Bin10;
  POPS_Bin11 = POPS.Bin11;
  POPS_Bin12 = POPS.Bin12;
  POPS_Bin13 = POPS.Bin13;
  POPS_Bin14 = POPS.Bin14;
  POPS_Bin15 = POPS.Bin15;
  POPS_Bin16 = POPS.Bin16;
  POPS_Stale = POPS_obj->stale(255);
}

