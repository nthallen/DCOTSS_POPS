AD7770_AI_t uDACS_B_AIN0; Invalidate uDACS_B_AIN0;
{ uDACS_B_AIN0 = (uDACS_B_Raw0 & 0xFFFFFF) |
    ((uDACS_B_Raw0 & 0x800000) ? 0xFF000000 : 0);
  Validate uDACS_B_AIN0;
}
AD7770_AI_stat_t uDACS_B_stat0; Invalidate uDACS_B_stat0;
{ uDACS_B_stat0 = (uDACS_B_Raw0 >> 24) & 0xFF;
  Validate uDACS_B_stat0;
}
AD7770_AI_t Ring1T; Invalidate Ring1T;
{ Ring1T = (uDACS_B_Raw1 & 0xFFFFFF) |
    ((uDACS_B_Raw1 & 0x800000) ? 0xFF000000 : 0);
  Validate Ring1T;
}
AD7770_AI_stat_t uDACS_B_stat1; Invalidate uDACS_B_stat1;
{ uDACS_B_stat1 = (uDACS_B_Raw1 >> 24) & 0xFF;
  Validate uDACS_B_stat1;
}
AD7770_AI_t Ring2T; Invalidate Ring2T;
{ Ring2T = (uDACS_B_Raw2 & 0xFFFFFF) |
    ((uDACS_B_Raw2 & 0x800000) ? 0xFF000000 : 0);
  Validate Ring2T;
}
AD7770_AI_stat_t uDACS_B_stat2; Invalidate uDACS_B_stat2;
{ uDACS_B_stat2 = (uDACS_B_Raw2 >> 24) & 0xFF;
  Validate uDACS_B_stat2;
}
AD7770_AI_t Ring3T; Invalidate Ring3T;
{ Ring3T = (uDACS_B_Raw3 & 0xFFFFFF) |
    ((uDACS_B_Raw3 & 0x800000) ? 0xFF000000 : 0);
  Validate Ring3T;
}
AD7770_AI_stat_t uDACS_B_stat3; Invalidate uDACS_B_stat3;
{ uDACS_B_stat3 = (uDACS_B_Raw3 >> 24) & 0xFF;
  Validate uDACS_B_stat3;
}

/* Converts volts to mbar. Baratron report 0-10 V for 0-1000 Torr */
TM typedef double InltBP_t { text "%9.4lf"; }
InltBP_t InltBP; Invalidate InltBP;
{ InltBP = (convert(uDACS_B_AIN0)
            + convert(uDACS_B_VSet1)
            - convert(InltBPZV))
           * 1000. * (1013.25/760) / (10. * 0.3875);
  Validate InltBP;
}

/*
uDACS_sec uDACS_B_elapsed_d; Invalidate uDACS_B_elapsed_d;
{ uDACS_B_elapsed_d = uDACS_B_elapsed/100;
  Validate uDACS_B_elapsed_d;
}
*/

%{
  /*
    AD7770_AI_t uDACS_B_AIN4; Invalidate uDACS_B_AIN4;
    { uDACS_B_AIN4 = (uDACS_B_Raw4 & 0xFFFFFF) |
        ((uDACS_B_Raw4 & 0x800000) ? 0xFF000000 : 0);
      Validate uDACS_B_AIN4;
    }
    AD7770_AI_stat_t uDACS_B_stat4; Invalidate uDACS_B_stat4;
    { uDACS_B_stat4 = (uDACS_B_Raw4 >> 24) & 0xFF;
      Validate uDACS_B_stat4;
    }
    AD7770_AI_t uDACS_B_AIN5; Invalidate uDACS_B_AIN5;
    { uDACS_B_AIN5 = (uDACS_B_Raw5 & 0xFFFFFF) |
        ((uDACS_B_Raw5 & 0x800000) ? 0xFF000000 : 0);
      Validate uDACS_B_AIN5;
    }
    AD7770_AI_stat_t uDACS_B_stat5; Invalidate uDACS_B_stat5;
    { uDACS_B_stat5 = (uDACS_B_Raw5 >> 24) & 0xFF;
      Validate uDACS_B_stat5;
    }
    AD7770_AI_t uDACS_B_AIN6; Invalidate uDACS_B_AIN6;
    { uDACS_B_AIN6 = (uDACS_B_Raw6 & 0xFFFFFF) |
        ((uDACS_B_Raw6 & 0x800000) ? 0xFF000000 : 0);
      Validate uDACS_B_AIN6;
    }
    AD7770_AI_stat_t uDACS_B_stat6; Invalidate uDACS_B_stat6;
    { uDACS_B_stat6 = (uDACS_B_Raw6 >> 24) & 0xFF;
      Validate uDACS_B_stat6;
    }
    AD7770_AI_t uDACS_B_AIN7; Invalidate uDACS_B_AIN7;
    { uDACS_B_AIN7 = (uDACS_B_Raw7 & 0xFFFFFF) |
        ((uDACS_B_Raw7 & 0x800000) ? 0xFF000000 : 0);
      Validate uDACS_B_AIN7;
    }
    AD7770_AI_stat_t uDACS_B_stat7; Invalidate uDACS_B_stat7;
    { uDACS_B_stat7 = (uDACS_B_Raw7 >> 24) & 0xFF;
      Validate uDACS_B_stat7;
    }
  */
%}
